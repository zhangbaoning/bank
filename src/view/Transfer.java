package view;

import dao.AcountDAOImpl;
import entity.Account;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;

/**
 * Created by zhangbaoning on 2016/11/30.
 */
public class Transfer {
    private JPanel panel1;
    private JButton back;
    private JButton confirm;
    private JButton exit;
    private JTextField inputNumber;
    private JTextField numberConfirm;
    private JTextField inputName;
    private JTextField inputBalance;
    private JLabel info;
    private Account reciver;

    JFrame frame = new JFrame("Transfer");
    public Transfer(Account account) {
        confirm.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                AcountDAOImpl dao = new AcountDAOImpl();
                boolean haveNumber = false;
                if (inputNumber.getText().equals(numberConfirm.getText())) {
                    Iterator it = new AcountDAOImpl().getAll().iterator();
                    String number = inputNumber.getText();
                    while (it.hasNext()) {
                        reciver = (Account) it.next();
                        if (reciver.getNumber().equals(number)) {
                            haveNumber = true;
                            break;
                        }
                    }
                    if (haveNumber == true) {
                        if (reciver.getUsername().equals(inputName.getText())) {
                            double balance = Integer.parseInt(inputBalance.getText());
                            if (account.getBalance() >= balance) {
                                reciver.setBalance(reciver.getBalance() + balance);
                                account.setBalance(account.getBalance() - balance);
                                dao.update(reciver);
                                dao.update(account);
                                dao.getTransaction().commit();
                                info.setText("转账成功");
                            } else {
                                info.setText("余额不足");
                            }
                        } else {
                            info.setText("输入收款人和账号不匹配，请查证后重新输入");
                        }
                    } else {
                        info.setText("账号不存在");
                    }

                } else {
                    info.setText("两次账号输入不一样，再次查证后输入");
                }
            }
        });
        back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
                new Switch(account).run();

            }
        });
    }

    public void run() {

        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setSize(520, 400);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel1.add(panel2, BorderLayout.WEST);
        back = new JButton();
        back.setText("返回");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(back, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer1, gbc);
        exit = new JButton();
        exit.setText("退卡");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(exit, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(spacer2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel1.add(panel3, BorderLayout.EAST);
        confirm = new JButton();
        confirm.setText("确认");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(confirm, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel3.add(spacer4, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        panel1.add(panel4, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("收款账号");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(label1, gbc);
        inputNumber = new JTextField();
        inputNumber.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 200.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel4.add(inputNumber, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("确认账号");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(label2, gbc);
        numberConfirm = new JTextField();
        numberConfirm.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel4.add(numberConfirm, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("收款人姓名");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(label3, gbc);
        inputName = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel4.add(inputName, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("转账金额");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(label4, gbc);
        inputBalance = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel4.add(inputBalance, gbc);
        info = new JLabel();
        info.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(info, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
